[tool.poetry]
name = "mysagw"
version = "0.0.0"
description = "Application management for SAGW"
repository = "https://github.com/adfinis/mySAGW"
authors = ["Adfinis"]
license = "GPL-3.0-or-later"
readme = "../README.md"

[tool.poetry.dependencies]
python = "^3.9"
django = "^3.2.23"
django-countries = "^7.5.1"
django-environ = "^0.11.2"
django-excel = "^0.0.10"
django-filter = "^23.2"
django-localized-fields = "^6.6"
django-phonenumber-field = {extras = ["phonenumberslite"], version = "^7.1.0"}
django-postgres-extra = "^2.0.8"
django-simple-history = "^3.4.0"
django-watchman = "^1.3.0"
djangorestframework = "^3.14.0"
djangorestframework-jsonapi = "^6.0.0"
drf-extra-fields = "^3.5.0"
mozilla-django-oidc = "^3.0.0"
openpyxl = "3.0.10"  # TODO: dependency of `pyexcel-xlsx`. Remove as soon as https://github.com/pyexcel/pyexcel-xlsx/issues/52 is resolved
psycopg2-binary = "^2.9.6"
pyexcel = "^0.7.0"
pyexcel-xlsx = "^0.6.0"
pypdf = "^3.17.0"
requests = "^2.31.0"
reportlab = "^4.0.4"
uwsgi = "^2.0.22"

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
django-extensions = "^3.2.3"
factory-boy = "^3.2.1"
gitlint = "^0.19.1"
pdbpp = "^0.10.3"
pre-commit = "^3.3.2"
psycopg2-binary = "^2.9.6"
pytest = "^7.3.1"
pytest-cov = "^4.1.0"
pytest-django = "^4.5.2"
pytest-env = "^1.1.1"
pytest-factoryboy = "^2.5.1"
pytest-freezegun = "^0.4.2"
pytest-mock = "^3.10.0"
pytest-randomly = "^3.12.0"
requests-mock = "^1.10.0"
syrupy = "^4.0.2"
ruff = "^0.1.3"

[tool.ruff]
exclude = [
    "migrations",
    "snapshots",
]
ignore = [
    "A003",     # `flake8-builtins` - Class attribute {name} is shadowing a Python builtin
    "ANN",      # `flake8-annotations`
    "ARG",      # `flake8-unused-arguments`
    "D100",     # Missing docstring in public module
    "D101",     # Missing docstring in public class
    "D102",     # Missing docstring in public method
    "D103",     # Missing docstring in public function
    "D104",     # Missing docstring in public package
    "D105",     # Missing docstring in magic method
    "D106",     # Missing docstring in public nested class
    "D107",     # Missing docstring in __init__
    "D202",     # No blank lines allowed after function docstring (found {num_lines})
    "D203",     # 1 blank line required before class docstring
    "D212",     # Multi-line docstring summary should start at the first line
    "DJ001",    #  flake8-django` - Avoid using null=True on string-based fields
    "E501",     # Line too long ({width} > {limit} characters) - managed by black
    "ERA001",   # eradicate - Found commented-out code
    "FA100",    # `future-rewritable-type-annotation` - obsolete in python >= 3.9
    "FBT002",   # `flake8-boolean-trap` - Boolean default positional argument in function definition
    "FBT003",   # Boolean positional value in function call
    "FIX",      # `flake8-fixme`
    "N818",     # Exception name {name} should be named with an Error suffix - https://github.com/astral-sh/ruff/issues/5367
    "PERF203",  # `try-except-in-loop` - obsolete in python >= 3.11
    "PGH005",   # doesn't work correctly with `requests-mock`
    "PLR0913",  # Too many arguments to function call
    "PLR2004",  # Magic value used in comparison, consider replacing {value} with a constant variable
    "PT006",    # Wrong name(s) type in @pytest.mark.parametrize, expected {expected}
    "PT017",    # Found assertion on exception {name} in except block, use pytest.raises() instead
    "PLW2901",  # `for` loop variable `search_term` overwritten by assignment target
    "RET502",   # Do not implicitly return None in function able to return non-None value
    "RET503",   # Missing explicit return at the end of function able to return non-None value
    "RUF001",   # ambiguous-unicode-character-string
    "RUF012",   # Mutable class attributes should be annotated with typing.ClassVar
    "S101",     # Use of assert detected
    "TD002",    # missing-todo-author
    "TD003",    # missing-todo-link
    "TID252",   # banned-module-level-imports
]
line-length = 88
select = ["ALL"]

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.isort]
known-first-party = ["mysagw", "caluma"]
combine-as-imports = true

[tool.ruff.flake8-pytest-style]
fixture-parentheses = false

[tool.ruff.per-file-ignores]
"manage.py" = ["INP001"]

[tool.pytest.ini_options]
addopts = "--reuse-db --randomly-seed=1521188766 --randomly-dont-reorganize"
DJANGO_SETTINGS_MODULE = "mysagw.settings"
env = [
    "ADMINS=Test Example <test@example.com>,Test2 <test2@example.com>",
    "OIDC_OP_USER_ENDPOINT=mock://mysagw.github.com/openid/userinfo",
    "OIDC_BEARER_TOKEN_REVALIDATION_TIME=60",
]
filterwarnings = [
    "error::DeprecationWarning",
    "error::PendingDeprecationWarning",
    "ignore:invalid escape sequence",  # needed for deprecation == "2.0.7" (dependency of localized-fields)
    "ignore:pkg_resources is deprecated as an API:DeprecationWarning",  # needed until this is resolved: https://github.com/SmileyChris/django-countries/issues/439
    "ignore:distutils Version classes are deprecated. Use packaging.version instead.:DeprecationWarning",  # issue in pytest-freezegun
    "ignore:LocalizedAutoSlug is deprecated and will be removed in the next major version:DeprecationWarning",
    "ignore:'django_extensions' defines default_app_config:PendingDeprecationWarning", # deprecation in django_extensions
]

[tool.coverage.run]
source = ["."]

[tool.coverage.report]
fail_under = 100
exclude_lines = [
    "pragma: no cover",
    "pragma: todo cover",
    "def __str__",
    "def __unicode__",
    "def __repr__",
]
omit = [
    "*/migrations/*",
    "*/apps.py",
    "manage.py",
    "mysagw/settings_*.py",
    "mysagw/wsgi.py",
]
show_missing = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
